---
- name: Ensure Tessera group exists
  group:
    name: "{{ tessera_group }}"
    state: present
  become: true

- name: Create Tessera user
  user:
    comment:  Tessera client user
    name: "{{ tessera_user }}"
    group: "{{ tessera_group }}"
  become: true

- name: Create base directory
  file:
    path: "{{ tessera_base_dir }}"
    state: directory
    owner: "{{ tessera_user }}"
    group: "{{ tessera_group }}"
  become: true

- name: Create install directory
  file:
    path: "{{ tessera_install_dir }}"
    state: directory
    owner: "{{ tessera_user }}"
    group: "{{ tessera_group }}"
  become: true

- name: Create log directory
  file:
    path: "{{ tessera_log_dir }}"
    state: directory
    owner: "{{ tessera_user }}"
    group: "{{ tessera_group }}"
  become: true

- name: Setup logrotate
  template:
    src: "tessera/templates/logrotate/tessera"
    dest: "/etc/logrotate.d/tessera"
  become: true

- name: Install latest Java
  block:
    - name: Java for RedHat distros
      package:
        name: "java-latest-openjdk.x86_64"
        state: latest
      become: yes
      when: ansible_os_family == 'RedHat'
    
    - name: Java for Debian distros
      package:
        name: "default-jdk"
        state: latest
      become: yes
      when: ansible_os_family == 'Debian'

- name: Extract Tessera distribution to install directory
  unarchive:
    src: "{{ tessera_download_url }}"
    remote_src: true
    dest: "{{ tessera_install_dir }}"
    owner: "{{ tessera_user }}"
    group: "{{ tessera_group }}"
    mode: '0775'
    extra_opts:
      - --strip-components
      - '1'
  become: true
  register: extract_src
  
- name: Install Tessera Artefacts
  include_tasks: "artefacts.yml"
  when: extract_src is changed and (aws_secret_manager or azure_key_vault or hashicorp_vault)

- name: Ensure config directory exists
  file:
    path: "{{ tessera_config_dir }}"
    state: directory
    owner: "{{ tessera_user }}"
    group: "{{ tessera_group }}"
  become: yes

- name: Create logback from template
  template:
    src: tessera/templates/logback.xml.j2
    dest: "{{ tessera_config_dir }}/logback.xml"
    owner: "root"
    group: "root"
  become: true
  when: ( ansible_os_family != "Darwin" )
  register: log_back

- name: Set updated optionally to trigger a systemd restart at the end
  set_fact:
    tessera_state_updates: "{{ tessera_state_updates + ['tessera.install_dir'] }}"
  when: extract_src is changed

# will throw error the first time you install since the service isnt present
- name: Stop Tessera systemd service if running
  service:
    name: tessera
    state: stopped
  when: ( extract_src is changed ) and
    ( ansible_os_family != "Darwin" )
  become: true
  ignore_errors: true


...